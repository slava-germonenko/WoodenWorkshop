version: "3.9"

services:
  users:
    image: "users"
    environment:
      ASPNETCORE_ENVIRONMENT: "Production"
      AppConfigurationConnectionString: ${AppConfigurationConnectionString}
    build:
      context: .
      dockerfile: src/WoodenWorkshop.Users.Api/Dockerfile
  passwords:
    image: "passwords"
    environment:
      ASPNETCORE_ENVIRONMENT: "Production"
      AppConfigurationConnectionString: ${AppConfigurationConnectionString}
    build:
      context: .
      dockerfile: src/WoodenWorkshop.Passwords.Api/Dockerfile
  "invitations":
    image: "invitations"
    environment:
      ASPNETCORE_ENVIRONMENT: "Production"
      AppConfigurationConnectionString: ${AppConfigurationConnectionString}
    build:
      context: .
      dockerfile: src/WoodenWorkshop.Invitations.Api/Dockerfile
  mailing:
    image: "mailing"
    environment:
      DOTNET_ENVIRONMENT: "Production"
      AppConfigurationConnectionString: ${AppConfigurationConnectionString}
    build:
      context: .
      dockerfile: src/WoodenWorkshop.Mailing.Api/Dockerfile
    depends_on:
      - queue
  sessions:
    image: "sessions"
    environment:
      DOTNET_ENVIRONMENT: "Production"
      AppConfigurationConnectionString: ${AppConfigurationConnectionString}
    ports:
      - "8004:80"
    build:
      context: .
      dockerfile: src/WoodenWorkshop.Sessions.Api/Dockerfile
  queue:
    hostname: "queue"
    image: rabbitmq:3-management-alpine
    environment:
      RABBITMQ_DEFAULT_USER: ${MessageQueue__Username}
      RABBITMQ_DEFAULT_PASS: ${MessageQueue__Password}
    volumes:
      - queue-storage:/var/lib/rabbitmq
      - queue-storage:/var/log/rabbitmq
    ports:
      - "9000:15672"

volumes:
  queue-storage:
